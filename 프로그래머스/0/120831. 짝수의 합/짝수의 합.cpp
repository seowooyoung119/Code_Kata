#include <string>
#include <vector>

using namespace std;

int solution(int n) {
   
    /*
    짝수일 때와 홀수일 때의 n이하의 짝수, 홀수가 어떤지 보자.
    
    n이 짝수일 6 경우에는 1,2,3,4,5,6       (짝수는 = 2,4,6  ) (홀수는 =1,3,5  )
    n이 홀수일 7 경우에는 1,2,3,4,5,6,7     (짝수는 = 2,4,6  ) (홀수는 =1,3,5,7)
    n이 짝수일 8 경우에는 1,2,3,4,5,6,7,8   (짝수는 = 2,4,6,8) (홀수는 =1,3,5,7)
    n이 홀수일 9 경우에는 1,2,3,4,5,6,7,8   (짝수는 = 2,4,6,8) (홀수는 =1,3,5,7,9)
    
    등차수열
    
    [평균 = 합/개수]
    
    일반적으로 평균을 구할려면 이렇게 한다.
    그렇다면 합을 구하려면...
    
    [합 = 평균 * 개수]
    
    이렇게 식을 수정할 수 있다.
    
    그럼 여기서 평균을 구해야 하는데 대칭이나 규칙이 있으면 됨.
    
    짝수는 +2씩 차이가 남. 
    
    n부터 n+2*??? 까지의 합은
    
    처음 숫자와 마지막 숫자를 더해서 둘만의 평균으로 구하는 것으로 전체의 평균을 구할 수 있음.
    
    즉, (처음 짝수 + 마지막 짝수)/2 * 개수
    
    >> ((2+n)/2)*(개수);
    
    그럼 개수는 어떻게 구함? 
    
    2이상 N이하의 자연수 개수를 구하는 방법은 무엇이냐.
    
    8에서 2까지 숫자라고 했을 때.
    
    8 - 2 를 하면 6이 나옴. 자연수에서는 1씩 차이나니까 총 6단계가 있는 것.
    
    그럼 짝수, 홀수 포함하면 총 6개임.
    
    9 - 2를 하면 7이 나옴. 자연수에서는 1씩 차이나니까 총 7단계가 있는 것.
    
    그럼 짝수, 홀수 포함하면 총 7개임.
    
    맨 위에 보면 알겠지만 홀수일 때는 홀수가 하나 더 많고, 짝수일 때는 짝수가 하나 더 많다.
    
    8일 경우 n/2 하면 짝수의 개수가 나오고. (2,4,6,8)

    9이 홀수일 경우 n/2 놀랍게도 짝수 갯수가 나온다. (2,4,6,8)
    
    이는 나머지를 갖다버리기 때문에 이렇게 나오는 것이다.
    
    홀수일 때   홀수의 갯수는 n/2 +1 이며
              짝수의 갯수는 n/2가 된다.
              
    즉, 짝수의 개수는 n/2 다.
    
    >> ((2+n)/2)*(개수);
    
    >> ((2+n)/2)*(n/2);
    
    
    */
    
    int answer = ((2+n)/2)*(n/2);
    return answer;
    
    
    

}

